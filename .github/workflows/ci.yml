name: ci
on:
  push:
    branches: [ main ]
  pull_request:
  schedule:
    # Nightly exhaustive fuzz run â€“ 24h budget
    - cron: "0 3 * * *"

jobs:
  build-test:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu]
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.target }}
      - name: Format check
        run: cargo fmt --check
      - name: Lint (clippy)
        run: cargo clippy --deny warnings
      - name: Unit tests (release)
        run: cargo test --all --release
      - name: Coverage (llvm-cov)
        run: cargo llvm-cov --fail-under 100 --all-features --workspace
      - name: Build (release)
        run: cargo build --release --target ${{ matrix.target }}

  fuzz:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - name: Install cargo-fuzz
        run: cargo install cargo-fuzz
      - name: Run http_parser fuzz (24h)
        run: cargo fuzz run http_parser -- -max_total_time=86400 -jobs=$(nproc)

  bench:
    runs-on: ubuntu-22.04
    needs: build-test
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - name: Run synthetic benchmarks
        run: cargo run --package tools --release -- bench

  sbom:
    runs-on: ubuntu-22.04
    needs: build-test
    steps:
      - uses: actions/checkout@v4
      - name: Generate SBOM (Syft)
        uses: anchore/syft-action@v0.5.0
        with:
          image: "scratch"
          output: "spdx-json=dist/sbom.json"
      - name: Sign SBOM (cosign)
        uses: sigstore/cosign-installer@v3
      - name: Cosign sign
        env:
          COSIGN_YES: "true"
        run: cosign sign --key k8s://cluster/key dist/sbom.json 